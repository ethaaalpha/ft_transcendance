"""
Django settings for pong_back project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import socket

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
	'daphne',
	'channels',
    'django.contrib.staticfiles',
	'authentification',
	'users',
	'stats',
	'friends',
	'activity',
	'conversations',
	'game',
	'coordination'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pong_back.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["../pong_front/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pong_back.wsgi.application'

ASGI_APPLICATION = 'pong_back.asgi.application'

DATABASES = {
    'default': {
		'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media / Static settings #
MEDIA_ROOT = "../media/"
MEDIA_URL = "media/"
STATIC_URL = "static/"
STATIC_ROOT = "../pong_front/static"
STATICFILES_DIRS = [
	BASE_DIR / "../pong_front",
]

# API - 42 #
API_CALLBACK = os.getenv('API_CALLBACK')
API_URL = os.getenv('API_URL')
API_UUID = os.getenv('API_UUID')
API_SECRET = os.getenv('API_SECRET')
API_TOKEN = os.getenv('API_TOKEN')
API_INFO = os.getenv('API_INFO')

# Inputs | Default Configs
DJANGO_SUPERUSER_USERNAME=os.getenv('DJANGO_SUPERUSER_USERNAME')
DJANGO_SUPERUSER_PASSWORD=os.getenv('DJANGO_SUPERUSER_PASSWORD')
DJANGO_SUPERUSER_EMAIL=os.getenv('DJANGO_SUPERUSER_EMAIL')

CONFIG_PASS_LENGTH_MAX = 32
CONFIG_PASS_LENGTH_MIN = 5

CONFIG_USER_LENGTH_MAX = 32
CONFIG_USER_LENGTH_MIN = 3

CONFIG_EMAIL_LENGTH_MAX = 254
CONFIG_EMAIL_LENGTH_MIN = 5

DEFAULT_PROFILE_PICTURE_NAME = 'pokemon.png'

MESSAGE_LENGTH_MAX = 1024

# Nginx Configuration
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

ALLOWED_HOSTS = ['localhost', socket.gethostbyname(socket.gethostname())]

# Channel Layer Configuration
CHANNEL_LAYERS = {
    # "default": {
    #     "BACKEND": "channels.layers.InMemoryChannelLayer"
    # },
	"default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis", 6379)],
        },
    },
}

# Mailing
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

# Debugging
LOGGING = {
	"version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "WARNING",
    },
    # "loggers": {
    #     "django": {
    #         "handlers": ["console"],
    #         "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
    #         "propagate": False,
    #     },
	# 	'daphne': {
   	# 	'handlers': [
    #    	 	'console',
    # 	],
    # 	'level': 'DEBUG'
	# 	},
    # },
}
